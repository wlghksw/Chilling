package com.example.users.service;

import com.example.users.dto.UsersDTO;
import com.example.users.entity.Users;
import com.example.users.entity.Users.Gender;
import com.example.users.repository.UsersRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;

@Service
@RequiredArgsConstructor
public class UsersService {

    private final UsersRepository usersRepository;

    public void signup(UsersDTO dto) {

        if (usersRepository.existsByLoginId(dto.getLoginId())) {
            throw new RuntimeException("이미 사용 중인 아이디입니다.");
        }

        if (usersRepository.existsByNickname(dto.getNickname())) {
            throw new RuntimeException("이미 사용 중인 닉네임입니다.");
        }

        Users user = new Users();

        user.setLoginId(dto.getLoginId());
        user.setPassword(dto.getPassword());
        user.setRealName(dto.getRealName());
        user.setNickname(dto.getNickname());
        user.setPhone(dto.getPhone());
        user.setBirthYear(dto.getBirthYear());

        if (dto.getGender() != null) {
            try {
                user.setGender(Gender.valueOf(dto.getGender().toUpperCase()));
            } catch (IllegalArgumentException e) {
                throw new RuntimeException("성별은 MALE 또는 FEMALE 중 하나여야 합니다.");
            }
        }

        user.setProfileImage(dto.getProfileImage());
        user.setIsActive(true);
        user.setIsAdmin(false);
        user.setCreatedAt(LocalDateTime.now());
        user.setUpdatedAt(LocalDateTime.now());

        usersRepository.save(user);
    }
}

